{"version":3,"sources":["dapp/connectors.js","logger.js","features/walletConnection/abi.js","features/walletConnection/walletConnectionAPI.js","features/walletConnection/walletConnectionSlice.js","components/Square.js","components/Editable.js","components/Grid.js","components/Connection.js","App.js","dapp/hooks.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["injected","InjectedConnector","supportedChainIds","RPC_URLS","1","process","NEXT_PUBLIC_RPC_URL_1","3","NEXT_PUBLIC_RPC_URL_3","4","NEXT_PUBLIC_RPC_URL_4","1337","walletconnect","WalletConnectConnector","rpc","qrcode","warn","loglevel","debug","info","error","trace","setLevel","contract_address","pixel_abi","getColors","page","library","Web3","provider","eth","Contract","methods","getColorsPaginated","call","getWalletPixels","account","tokensOfOwnerBySize","initialState","triedEager","walletConnect","undefined","activatingConnector","board_size","square_size","get_colors","colors","update_colors","colors_to_update","get_wallet","wallet_pixels","getColorsAsync","createAsyncThunk","a","response","getWalletPixelsAsync","walletConnectionSlice","createSlice","name","reducers","setTriedEager","state","action","payload","setActivatingConnector","mNFT","mintNFT","send","from","then","console","log","pushChangedColors","changeColorPack","pixel","cUrl","changeUrls","url","pixels","updateCachedColor","index","addColorToUpdate","resetColorToUpdate","extraReducers","builder","addCase","pending","fulfilled","page_index","parseInt","forEach","elem","key","i","actions","mapDispatchToProps","updateColor","pos","c","dispatch","getState","walletConnection","map","item","connect","props","squareColors","useState","setPos","color","setColor","onChange","substring","row_list","Array","keys","cellSpacing","className","row","col","j","onClick","editable","style","backgroundColor","placeholder","value","tdStyle","overflow","width","height","boarderColor","border","padding","open","toggle","includes","toString","changeColors","Object","context","useWeb3React","length","tried","connection","connector","activate","deactivate","active","connected","disabled","type","role","aria-label","nbPixel","prompt","close","useEffect","suppress","ethereum","window","on","handleConnect","logger","handleChainChanged","chainId","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","setTried","isAuthorized","catch","useEagerConnect","wait","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","counterSlice","status","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getLibrary","Web3Provider","pollingInterval","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1b7e7bf.chunk.js","sourcesContent":["import { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\n\nexport const POLLING_INTERVAL = 12000;\nexport const injected = new InjectedConnector({\n    supportedChainIds: [1, 3, 4, 5, 42, 56, 88, 89, 97, 137, 1337, 80001],\n});\n\nconst RPC_URLS = {\n    1: process.env.NEXT_PUBLIC_RPC_URL_1,\n    3: process.env.NEXT_PUBLIC_RPC_URL_3,\n    4: process.env.NEXT_PUBLIC_RPC_URL_4,\n    1337: \"http://127.0.0.1:8545/\",\n};\n\nexport const walletconnect = new WalletConnectConnector({\n    rpc: RPC_URLS,\n    qrcode: true,\n});\n","import loglevel from \"loglevel\";\n\n// eslint-disable-next-line\nexport default {\n    warn: loglevel.warn,\n    debug: loglevel.debug,\n    info: loglevel.info,\n    error: loglevel.error,\n    trace: loglevel.trace,\n    setLevel: loglevel.setLevel,\n};\n","export const contract_address = \"0xa67Ad061184F19C2f6d83aA5684144757d7EA136\"\nexport const pixel_abi = [\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"approved\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"ApprovalForAll\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"previousOwner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"newColor\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"colorChanged\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"newLink\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"linkChanged\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string[100]\",\n        \"name\": \"newStats\",\n        \"type\": \"string[100]\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"changeColorPack\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"newLink\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"changeLink\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getAllLinks\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string[]\",\n        \"name\": \"\",\n        \"type\": \"string[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getApproved\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getColor\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string[100]\",\n        \"name\": \"\",\n        \"type\": \"string[100]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"page\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getColorsPaginated\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string[100][10]\",\n        \"name\": \"\",\n        \"type\": \"string[100][10]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getLink\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isApprovedForAll\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"maxAmountOfPixel\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"mintNFT\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ownerOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"parcelSize\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"pricePerMint\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"renounceOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"_data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"setApprovalForAll\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenByIndex\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenOfOwnerByIndex\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenURI\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"user\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"tokensOfOwnerBySize\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalColors\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address payable\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"withdraw\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]\n","import Web3 from \"web3\";\nimport { pixel_abi, contract_address } from \"./abi\";\n\n/**\n * WARNING: WE CAN'T CALL THE WALLET FROM ASYNC FUNCTION\n * THIS DOESN'T WORK\n * export const mintNFT = (library, account) => {\n *   const w = new Web3(library.provider);\n *   const contract = new w.eth.Contract(pixel_abi, contract_address);\n *   contract.methods.getColor(0).call().then(console.log)\n *   contract.methods.mintNFT(account).send({ from: account }).then(console.log)\n *   return contract.methods.mintNFT(account).send({ from: account });\n * }\n*/\n\n/**\n * Get all pixels colors\n */\nexport const getColors = (page, library) => {\n    const w = new Web3(library.provider);\n    const contract = new w.eth.Contract(pixel_abi, contract_address);\n\n    return contract.methods.getColorsPaginated(page).call()\n}\n\nexport const getWalletPixels = (library, account) => {\n    const w = new Web3(library.provider);\n    const contract = new w.eth.Contract(pixel_abi, contract_address);\n\n    return contract.methods.tokensOfOwnerBySize(account).call()\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getColors, getWalletPixels } from './walletConnectionAPI';\nimport Web3 from \"web3\";\nimport {contract_address, pixel_abi} from \"./abi\";\n\nconst initialState = {\n    triedEager: false,\n\n    walletConnect: undefined,\n    activatingConnector: undefined,\n\n    board_size: 10,\n    square_size: 10,\n    get_colors: 'idle',\n    colors: [],\n    update_colors: false,\n    colors_to_update: [],\n\n    get_wallet: 'idle',\n    wallet_pixels: [],\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const getColorsAsync = createAsyncThunk(\n    'walletConnection/getColors',\n    async ({page, library}) => {\n        const response = await getColors(page, library);\n        // The value we return becomes the `fulfilled` action payload\n        return {response, page};\n    }\n);\n\nexport const getWalletPixelsAsync = createAsyncThunk(\n    'walletConnection/getWalletPixels',\n    async ({library, account}) => {\n        const response = await getWalletPixels(library, account);\n        // The value we return becomes the `fulfilled` action payload\n        return response;\n    }\n);\n\nexport const walletConnectionSlice = createSlice({\n    name: 'walletConnection',\n    initialState,\n    reducers: {\n        setTriedEager: (state, action) => {\n            state.triedEager = action.payload\n        },\n        setActivatingConnector: (state, activatingConnector) => {\n            state.activatingConnector = activatingConnector\n\n        },\n        /**\n         * Mint a pixel\n         * @param state\n         * @param action\n         */\n        mNFT: (state, action) => {\n            const w = new Web3(action.payload.library.provider);\n            const contract = new w.eth.Contract(pixel_abi, contract_address);\n            contract.methods.mintNFT(action.payload.account).send({ from: action.payload.account }).then(console.log)\n\n        },\n        /**\n         * Set a color for each pixels\n         * @param state\n         * @param action\n         */\n        pushChangedColors: (state, action) => {\n            const w = new Web3(action.payload.library.provider);\n            const contract = new w.eth.Contract(pixel_abi, contract_address);\n            contract.methods.changeColorPack(action.payload.colors, action.payload.pixel)\n                .send({ from: action.payload.account })\n                .then(console.log)\n        },\n        /**\n         * Set an url for multiple pixel\n         * @param state\n         * @param action\n         */\n        cUrl: (state, action) => {\n            const w = new Web3(action.payload.library.provider);\n            const contract = new w.eth.Contract(pixel_abi, contract_address);\n            contract.methods.changeUrls(action.payload.url, action.payload.pixels).send({ from: action.payload.account }).then(console.log)\n        },\n        updateCachedColor: (state, action) => {\n            state.colors[action.payload.index] = action.payload.colors\n            state.update_colors = !state.update_colors\n        },\n        addColorToUpdate: (state, action) => {\n            state.colors_to_update[action.payload.index] = action.payload.colors\n        },\n        resetColorToUpdate: (state, action) => {\n            state.colors_to_update = {}\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(getColorsAsync.pending, (state) => {\n                state.get_colors = 'loading';\n            })\n            .addCase(getColorsAsync.fulfilled, (state, action) => {\n                const page_index = parseInt(action.payload.page) * state.square_size;\n\n                action.payload.response.forEach((elem, key) => {\n                    if (elem) {\n                        const i = page_index + key\n                        state.colors[i] = elem\n                    }\n                })\n                if (state.get_colors === 'idle')\n                    state.get_colors = 'idle2';\n            })\n            .addCase(getWalletPixelsAsync.pending, (state) => {\n                state.get_wallet = 'loading';\n                state.wallet_pixels = []\n            })\n            .addCase(getWalletPixelsAsync.fulfilled, (state, action) => {\n                state.get_wallet    = 'idle';\n                state.wallet_pixels = action.payload\n            });\n    },\n});\n\nexport const { setTriedEager, setActivatingConnector, mNFT, pushChangedColors, addColorToUpdate, resetColorToUpdate, updateCachedColor } = walletConnectionSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n    const currentValue = selectCount(getState());\n    if (currentValue % 2 === 1) {\n        // dispatch(incrementByAmount(amount));\n    }\n};\n\n\nexport const  updateColor = (index, pos, c) => (dispatch, getState) => {\n    let colors = getState().walletConnection.colors[index].map((item) => item)\n    colors[pos] = c\n    dispatch(updateCachedColor({index, colors}))\n    dispatch(addColorToUpdate({index, colors}))\n}\n\nexport const changeColors = (colors_to_update, account, library) => (dispatch, getState) => {\n    Object.keys(colors_to_update).map((pixel) =>\n        dispatch(pushChangedColors({pixel: pixel,  colors: colors_to_update[pixel], account: account, library: library}))\n    )\n    dispatch(resetColorToUpdate())\n}\n\nexport default walletConnectionSlice.reducer;\n","import React, { useState } from 'react';\nimport { connect } from \"react-redux\"\nimport {HexColorPicker} from \"react-colorful\";\nimport { Form, FormInput } from \"shards-react\";\n\nimport {mNFT, setActivatingConnector, updateColor} from \"../features/walletConnection/walletConnectionSlice\";\n\nimport \"./Square.css\"\n\n\nconst pixelStyle = {\n    overflow:'hidden',\n    width:'auto',\n    height:'2px',\n    backgroundColor: 'white',\n    boarderColor: 'red' ,\n    border: \".1px solid black\",\n    padding: '0px'\n}\nconst tableStyle = {\n    textAlign: \"center\",\n    margin: \"auto\",\n    height: \"100%\",\n    width: \"100%\",\n    border: \"0px solid black\",\n    tableLayout: 'fixed',\n}\n\nconst Square = (props) => {\n    const squareColors = props.colors[props.index]\n    const [pos, setPos] = useState(undefined)\n    const [color, setColor] = useState(`#ffffff`);\n    const onChange = (color) => {\n        setColor(color)\n        props.updateColor(props.index, pos, color.substring(1))\n    }\n\n    const row_list = Array.from(Array(props.square_size).keys())\n\n    return (<>\n            <table cellSpacing=\"0\" className=\"square\">\n                <tbody >\n                {row_list.map((row, i) => (<tr key={\"row_\"+i}>\n                        {row_list.map((col, j) => <td\n                                onClick={() => {\n                                    setPos(i * props.square_size + j)\n                                    setColor(`#${squareColors[i * props.square_size + j]}`)\n                                }}\n                                className={props.editable === true? \"my-pixel-edit\" : \"my-pixel\" }\n                                style={{backgroundColor: `#${squareColors[i * props.square_size + j]}`}}\n                            />\n                        )}\n                    </tr>))}\n                </tbody>\n            </table>\n        {(props.editable === true && pos !== undefined ? <>\n            <HexColorPicker color={color} onChange={onChange} />\n            <Form>\n                <FormInput placeholder=\"Normal input\" className=\"mb-2\" value={color} onChange={onChange}/>\n            </Form>\n        </> : true )}\n    </>)\n}\n\nconst mapStateToProps = state => ({\n    colors: state.walletConnection.colors,\n    square_size: state.walletConnection.square_size,\n})\n\nconst mapDispatchToProps = {\n    setActivatingConnector,\n    mNFT,\n    updateColor,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Square)\n","import React, { useState } from 'react';\nimport { connect } from \"react-redux\"\nimport {ModalHeader, Modal, ModalBody } from \"shards-react\";\nimport {\n    addColorToUpdate,\n    mNFT,\n    setActivatingConnector,\n    updateCachedColor\n} from \"../features/walletConnection/walletConnectionSlice\";\nimport Square from \"./Square\";\n\nconst tdStyle = {\n    overflow: 'hidden',\n    width: 'auto',\n    height: 'auto',\n    backgroundColor: 'white',\n    boarderColor: 'red',\n    border: \".0px solid black\",\n    padding: '0px'\n}\n\nconst Editable = (props) => {\n    const [open, toggle] = useState(false)\n\n    if (props.colors[props.index] === undefined)\n        return <></>\n    return (<>\n        <td style={tdStyle} >\n            <div\n            onClick={() => props.wallet_pixels.includes(props.index.toString()) ? toggle(true) : true}\n            >\n            <Square index={props.index}/>\n            </div>\n            <Modal open={open} toggle={() => toggle(false)}>\n                <ModalHeader>Header</ModalHeader>\n                <ModalBody>\n                    <Square index={props.index} editable={true}/>\n                </ModalBody>\n            </Modal>\n        </td>\n    </>)\n}\n\nconst mapStateToProps = state => ({\n    colors: state.walletConnection.colors,\n    wallet_pixels: state.walletConnection.wallet_pixels,\n})\n\nconst mapDispatchToProps = {\n    setActivatingConnector,\n    mNFT,\n    addColorToUpdate,\n    updateCachedColor,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Editable)\n","import React, {useEffect, useState} from 'react';\nimport { connect } from \"react-redux\"\n\nimport {mNFT, setActivatingConnector, changeColors} from \"../features/walletConnection/walletConnectionSlice\";\nimport {Button } from \"shards-react\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport Editable from \"./Editable\";\n\nimport \"./grid.css\"\n\nconst Grid = (props) => {\n    const context = useWeb3React()\n    const { library, account } = context;\n    const row_list = Array.from(Array(props.board_size).keys())\n\n    if (props.colors && props.colors.length === 0) {\n        return <></>\n    }\n\n    return (<> { (props.colors_to_update.length === 0) ?\n        <></> : <Button onClick={() => {\n            props.changeColors(props.colors_to_update, account, library)\n        }} >You have non push colors </Button> }\n\n        <div>\n            <table cellSpacing=\"0\" className=\"base-grid\">\n                <tbody>\n                {row_list.map((row, i) => (\n                    <tr key={\"row_\"+i}>\n                        {row_list.map((col, j) => {\n                            if (i * props.board_size + j >= props.colors.length)\n                                return <></>\n                            return <Editable index={i * props.board_size + j} key={i+\"_\"+j} />\n                        })}\n                    </tr>))}\n                </tbody>\n            </table>\n        </div>\n    </>)\n\n}\n\n\n\nconst mapStateToProps = state => ({\n    colors_to_update: state.walletConnection.colors_to_update,\n    colors: state.walletConnection.colors,\n    board_size: state.walletConnection.board_size,\n    square_size: state.walletConnection.board_size,\n})\n\nconst mapDispatchToProps = {\n    setActivatingConnector,\n    mNFT,\n    changeColors\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid)\n","import React from 'react';\nimport { connect } from \"react-redux\"\nimport {useWeb3React} from \"@web3-react/core\";\n\nimport {injected, walletconnect} from \"../dapp/connectors\";\nimport { setActivatingConnector, mNFT } from \"../features/walletConnection/walletConnectionSlice\";\n\nconst Connection = (props) =>  {\n    const context = useWeb3React()\n    const { connector, library, account, activate, deactivate, active, error } = context;\n    const activating = (connection) => connection === props.activatingConnector;\n    const connected = (connection) => connection === connector;\n    const disabled = !props.tried || !!props.activatingConnector || connected(injected) || connected(walletconnect) || !!error;\n\n    return (<div className=\"justify-center card-actions\">\n        <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            disabled={disabled}\n            onClick={() => {\n                props.setActivatingConnector(injected);\n                activate(injected);\n            }}\n        >\n            <div className=\"px-2 py-2\">\n                {activating(injected) && <p className=\"btn loading\">loading...</p>}\n                {connected(injected) && (\n                    <span role=\"img\" aria-label=\"check\">✅</span>\n                )}\n            </div>\n            Connect with MetaMask\n        </button>\n        {(active || error) && connected(injected) && (\n            <>\n                {!!(library && account) && (\n                    <>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={() => props.mNFT({library, account})}\n                        >\n                            Mint a pixel\n                        </button>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={() => {\n                                const nbPixel = parseInt(prompt(\"How much pixels ?\", \"0\"))\n                                for (let i = 0; i < nbPixel; i++)\n                                     props.mNFT({library, account})\n                            }}\n                        >\n                            Mint multiple pixel\n                        </button>\n                    </>\n                )}\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    onClick={() => {\n                        if (connected(walletconnect)) {\n                            console.log('disconnect')\n                            connector.close();\n                        }\n                        deactivate();\n                    }}\n                >\n                    Disconnect Metamask\n                </button>\n            </>\n        )}\n    </div>)\n};\n\n\nconst mapStateToProps = state => ({\n    tried: state.walletConnection.tried,\n    activatingConnector: state.walletConnection.activatingConnector,\n})\n\nconst mapDispatchToProps = {\n    setActivatingConnector,\n    mNFT,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Connection)\n","import React, {useEffect} from 'react';\nimport {connect} from \"react-redux\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\nimport './App.css';\n\nimport {POLLING_INTERVAL} from \"./dapp/connectors\";\nimport {Web3Provider} from \"@ethersproject/providers\";\nimport {useEagerConnect, useInactiveListener} from \"./dapp/hooks\";\nimport {mNFT, setActivatingConnector, setTriedEager, getColorsAsync, getWalletPixelsAsync} from \"./features/walletConnection/walletConnectionSlice\";\n\nimport Grid from \"./components/Grid\";\nimport Connection from \"./components/Connection\";\nimport {useWeb3React} from \"@web3-react/core\";\n\nexport function getLibrary(provider) {\n    const library = new Web3Provider(provider);\n    library.pollingInterval = POLLING_INTERVAL;\n    return library;\n}\n\nconst App = (props) => {\n    const context = useWeb3React()\n    const { library, account } = context;\n    useEffect(() => {\n        if (library) {\n            props.getColorsAsync({page: 0, library: library})\n            props.getColorsAsync({page: 1, library: library})\n            props.getColorsAsync({page: 2, library: library})\n            props.getColorsAsync({page: 3, library: library})\n            props.getColorsAsync({page: 4, library: library})\n            props.getColorsAsync({page: 5, library: library})\n            props.getColorsAsync({page: 6, library: library})\n            props.getColorsAsync({page: 7, library: library})\n            props.getColorsAsync({page: 8, library: library})\n            props.getColorsAsync({page: 9, library: library})\n            props.getWalletPixelsAsync({library, account})\n\n        }\n    }, [library])\n\n    useInactiveListener(!props.triedEager || !!props.activatingConnector);\n    useEagerConnect(props.triedEager, props.setTriedEager)\n    return (\n        <div className=\"App\">\n            <Connection />\n            <br/>\n            <br/>\n            <br/>\n            <Grid wait={3000} />\n        </div>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    triedEager: state.walletConnection.tried,\n    activatingConnector: state.walletConnection.activatingConnector,\n})\n\nconst mapDispatchToProps = {\n    setActivatingConnector,\n    setTriedEager,\n    mNFT,\n    getColorsAsync,\n    getWalletPixelsAsync\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { useWeb3React } from \"@web3-react/core\";\nimport { useEffect } from \"react\";\n\nimport logger from \"../logger\";\nimport { injected } from \"./connectors\";\n\nexport function useEagerConnect(tried, setTried) {\n    const { activate, active } = useWeb3React();\n\n    useEffect(() => {\n        injected.isAuthorized().then((isAuthorized) => {\n            if (isAuthorized) {\n                activate(injected, undefined, true).catch(() => {\n                    setTried(true);\n                });\n            } else {\n                setTried(true);\n            }\n        });\n    }, []);\n\n    // if the connection worked, wait until we get confirmation of that to flip the flag\n    useEffect(() => {\n        if (!tried && active) {\n            setTried(true);\n        }\n    }, [tried, active]);\n\n    return tried;\n}\n\nexport function useInactiveListener(suppress = false) {\n    const { active, error, activate } = useWeb3React();\n\n    useEffect(() => {\n        const { ethereum } = window;\n        if (ethereum && ethereum.on && !active && !error && !suppress) {\n            const handleConnect = () => {\n                logger.warn(\"Handling 'connect' event\");\n                activate(injected);\n            };\n            const handleChainChanged = (chainId) => {\n                logger.warn(\"Handling 'chainChanged' event with payload\", chainId);\n                activate(injected);\n            };\n            const handleAccountsChanged = (accounts) => {\n                logger.warn(\"Handling 'accountsChanged' event with payload\", accounts);\n                if (accounts.length > 0) {\n                    activate(injected);\n                }\n            };\n            const handleNetworkChanged = (networkId) => {\n                logger.warn(\"Handling 'networkChanged' event with payload\", networkId);\n                activate(injected);\n            };\n\n            ethereum.on(\"connect\", handleConnect);\n            ethereum.on(\"chainChanged\", handleChainChanged);\n            ethereum.on(\"accountsChanged\", handleAccountsChanged);\n            ethereum.on(\"networkChanged\", handleNetworkChanged);\n\n            return () => {\n                if (ethereum.removeListener) {\n                    ethereum.removeListener(\"connect\", handleConnect);\n                    ethereum.removeListener(\"chainChanged\", handleChainChanged);\n                    ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n                    ethereum.removeListener(\"networkChanged\", handleNetworkChanged);\n                }\n            };\n        }\n    }, [active, error, suppress, activate]);\n}\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport walletConnection from \"../features/walletConnection/walletConnectionSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    walletConnection: walletConnection\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { Web3ReactProvider } from \"@web3-react/core\";\n\nimport './index.css';\nimport App, { getLibrary } from './App';\nimport { store } from './app/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Web3ReactProvider getLibrary={getLibrary}>\n                <App />\n            </Web3ReactProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}